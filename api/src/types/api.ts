/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/health": {
    /** Health endpoint */
    get: {
      responses: {
        200: components["responses"]["Health"];
        default: components["responses"]["Error"];
      };
    };
  };
  "/campings": {
    /** Search campings */
    get: {
      parameters: {
        query: {
          /** The number of campings to skip before starting to collect the result set */
          offset: number;
          /** The numbers of campings to return */
          limit?: number;
          /** Latitude */
          lat?: number;
          /** Longitude */
          lon?: number;
          /** Radius in km to search within */
          radius?: number;
        };
      };
      responses: {
        200: components["responses"]["Campings"];
        default: components["responses"]["Error"];
      };
    };
  };
  "/campings/{id}": {
    /** Get camping by id */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        200: components["responses"]["Camping"];
        default: components["responses"]["Error"];
      };
    };
  };
}

export interface components {
  schemas: {
    GeoLocation: {
      type: "Point";
      /** Array with longitude and latitude coordinates */
      coordinates: number[];
    };
    Camping: {
      id: string;
      /** GeoJSON point of the camping's location */
      location: components["schemas"]["GeoLocation"];
      /** ISO 3166-1 alpha-2 code of the country */
      countryCode: string;
      /** Tags attached to the OpenStreetMap listing of the camping (see https://wiki.openstreetmap.org/wiki/Tag:tourism%3Dcamp_site) */
      tags?: { [key: string]: any };
    };
    Health: {
      status: string;
    };
    ValidationError: {
      path: string;
      message: string;
      errorCode: string;
    };
    Error: {
      message: string;
      errors?: components["schemas"]["ValidationError"][];
    };
  };
  responses: {
    /** Error message */
    Error: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
    /** Health response */
    Health: {
      content: {
        "application/json": components["schemas"]["Health"];
      };
    };
    /** Array of campings */
    Campings: {
      content: {
        "application/json": {
          items?: components["schemas"]["Camping"][];
        };
      };
    };
    /** Single camping object */
    Camping: {
      content: {
        "application/json": {
          item?: components["schemas"]["Camping"];
        };
      };
    };
  };
}

export interface operations {}
