openapi: "3.0.0"
info:
  version: 0.0.1
  title: Camping API
  description: An API to search for campgrounds in the EU
  license:
    name: MIT
    url: https://github.com/mi-kas/open-camping-api/blob/main/LICENSE
servers:
  - url: "{server}/api/v1"
    variables:
      server:
        default: http://localhost:4000
        enum:
          - http://localhost:4000 # Development server
security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      description: Health endpoint
      responses:
        "200":
          $ref: "#/components/responses/Health"
        default:
          $ref: "#/components/responses/Error"

  /campings:
    get:
      description: Search campings
      parameters:
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            minimum: 0
          description: The number of campings to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 0
            maximum: 100
          description: The numbers of campings to return
        - in: query
          name: lat
          schema:
            type: number
            format: float
            maximum: 85
            minimum: -85
          description: Latitude
        - in: query
          name: lon
          schema:
            type: number
            format: float
            maximum: 180
            minimum: -180
          description: Longitude
        - in: query
          name: radius
          schema:
            type: integer
            minimum: 0
          description: Radius in km to search within
      responses:
        "200":
          $ref: "#/components/responses/Campings"
        default:
          $ref: "#/components/responses/Error"

  /campings/{id}:
    get:
      description: Get camping by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/Camping"
        default:
          $ref: "#/components/responses/Error"

components:
  responses:
    Error:
      description: Error message
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Health:
      description: Health response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Health"
    Campings:
      description: Array of campings
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: "#/components/schemas/Camping"
    Camping:
      description: Single camping object
      content:
        application/json:
          schema:
            type: object
            properties:
              item:
                $ref: "#/components/schemas/Camping"
  schemas:
    GeoLocation:
      properties:
        type:
          type: string
          enum: [Point]
        coordinates:
          type: array
          maxItems: 2
          minItems: 2
          items:
            type: number
          description: Array with longitude and latitude coordinates
      required:
        - type
        - coordinates

    Camping:
      properties:
        id:
          type: string
        location:
          $ref: "#/components/schemas/GeoLocation"
          description: GeoJSON point of the camping's location
        countryCode:
          type: string
          description: ISO 3166-1 alpha-2 code of the country
        tags:
          type: object
          description: Tags attached to the OpenStreetMap listing of the camping (see https://wiki.openstreetmap.org/wiki/Tag:tourism%3Dcamp_site)
      required:
        - id
        - location
        - countryCode

    Health:
      required:
        - status
      properties:
        status:
          type: string

    ValidationError:
      required:
        - path
        - message
        - errorCode
      properties:
        path:
          type: string
        message:
          type: string
        errorCode:
          type: string

    Error:
      required:
        - message
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
