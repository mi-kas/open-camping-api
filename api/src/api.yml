openapi: "3.0.0"
info:
  version: 0.0.1
  title: OPEN Camping API
  description: An open REST API to search for campings
  license:
    name: MIT
    url: https://github.com/mi-kas/open-camping-api/blob/main/LICENSE
servers:
  - url: "{server}/api/v1"
    variables:
      server:
        default: http://localhost:4000
        enum:
          - http://localhost:4000 # Development server
security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      description: Health endpoint
      responses:
        "200":
          $ref: "#/components/responses/Health"
        default:
          $ref: "#/components/responses/Error"

  /campings:
    post:
      description: Search campings
      requestBody:
        description: Camping search request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CampingSearch"
      responses:
        "200":
          $ref: "#/components/responses/Campings"
        default:
          $ref: "#/components/responses/Error"

  /campings/{id}:
    get:
      description: Get camping by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/Camping"
        default:
          $ref: "#/components/responses/Error"

components:
  responses:
    Error:
      description: Error message
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Health:
      description: Health response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Health"
    Campings:
      description: Array of campings
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CampingsResponse"
    Camping:
      description: Single camping object
      content:
        application/json:
          schema:
            type: object
            properties:
              item:
                $ref: "#/components/schemas/Camping"
  schemas:
    Point2D:
      type: array
      description: Array with longitude and latitude coordinates
      maxItems: 2
      minItems: 2
      items:
        type: number

    Point:
      description: GeoJSON point
      externalDocs:
        url: https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.2
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum: [Point]
        coordinates:
          $ref: "#/components/schemas/Point2D"

    Polygon:
      description: GeoJSON polygon
      externalDocs:
        url: https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.6
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum: [Polygon]
        coordinates:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/Point2D"

    PointSearch:
      description: Searches for campings near the specified coordinates and within the specified maximum distance. Campings are returned from nearest to farthest.
      required:
        - geometry
        - maxDistance
      properties:
        geometry:
          $ref: "#/components/schemas/Point"
        maxDistance:
          type: integer
          minimum: 0
          description: Maximum distance in meters from the point coordinates

    PolygonSearch:
      description: Searches for campings within the specified polygon
      required:
        - geometry
      properties:
        geometry:
          $ref: "#/components/schemas/Polygon"

    CampingSearch:
      required:
        - offset
        - limit
      properties:
        offset:
          type: integer
          minimum: 0
          description: The number of campings to skip before starting to collect the result set
        limit:
          type: integer
          minimum: 0
          maximum: 100
          description: The number of campings to skip before starting to collect the result set
        countryCode:
          $ref: "#/components/schemas/CountryCode"
        location:
          oneOf:
            - $ref: "#/components/schemas/PointSearch"
            - $ref: "#/components/schemas/PolygonSearch"

    CountryCode:
      type: string
      description: The ISO 3166-1 alpha-2 two letter country code in upper case
      minLength: 2
      maxLength: 2

    BooleanTag:
      type: string
      enum:
        - yes
        - no

    ClassificationTags:
      properties:
        tourism:
          type: string
          enum:
            - camp_site
            - camp_pitch
            - caravan_site
          description: Type of campsite
        camp_site:
          type: string
          enum:
            - basic
            - standard
            - serviced
            - deluxe
          description: An approved classification system related to the level of services and amenities
        stars:
          type: integer
          minimum: 1
          maximum: 5
          description: An alternative classification scheme, used in France for example
        fee:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether a fee is required to use this campsite
        opening_hours:
          type: string
          description: Specify the opening hours and season for this campsite
        lit:
          $ref: "#/components/schemas/BooleanTag"
          description: Is the camp site lit at night?

    ContactTags:
      properties:
        addr:city:
          type: string
          description: The name of the city as given in postal addresses of the campsite
        addr:postcode:
          type: string
          description: The postal code of the campsite
        addr:street:
          type: string
          description: The name of the street
        addr:housenumber:
          type: string
          description: The house number (may contain letters, dashes or other characters)
        addr:country:
          $ref: "#/components/schemas/CountryCode"
        phone:
          type: string
          description: Contact phone number
        website:
          type: string
          description: Campsite website
        email:
          type: string
          format: email
          description: Contact email address

    CapacityTags:
      properties:
        capacity:persons:
          type: integer
          description: Maximum number of visitors (often limited at backcountry sites)
        capacity:tents:
          type: integer
          description: Number of pitches available for tents
        capacity:caravans:
          type: integer
          description: Number of pitches available for caravans/RV
        tents:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether camping in tents is allowed
        caravans:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether camping in vehicles is allowed
        cabins:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether the site has cabins for rent
        static_caravans:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether the site has static caravans
        permanent_camping:
          type: string
          enum:
            - yes
            - no
            - only
          description: Wheather pitches are available for rent on a yearly or seasonal basis

    AccessTags:
      properties:
        backcountry:
          $ref: "#/components/schemas/BooleanTag"
          description: Backcountry camping without facilities. The access is by non-motorized means.
        dog:
          type: string
          enum:
            - yes
            - no
            - leashed
          description: Are dogs allowed?
        group_only:
          $ref: "#/components/schemas/BooleanTag"
          description: Is it a group-only campground?
        motor_vehicle:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether motor vehicles (motorcycles, cars, trucks, caravans) are allowed
        nudism:
          type: string
          enum:
            - yes
            - no
            - accepted
            - required
          description: Is nudism permitted?
        openfire:
          $ref: "#/components/schemas/BooleanTag"
          description: Are fires permitted?
        reservation:
          type: string
          enum:
            - yes
            - no
            - recommended
            - required
          description: Are reservations possible, recommended or required, or is it "first come, first served"?
        scout:
          $ref: "#/components/schemas/BooleanTag"
          description: Is it a scoutcamp?

    AmenityTags:
      properties:
        bbq:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether a bbq (grill) is available
        drinking_water:
          $ref: "#/components/schemas/BooleanTag"
          description: Availability of water to drink
        hot_water:
          $ref: "#/components/schemas/BooleanTag"
          description: Availability of warm water (e.g. cooking)
        internet_access:
          type: string
          enum:
            - yes
            - no
            - wlan
          description: Provision of access to the internet. wlan wireless internet, e.g. WiFi.
        kitchen:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether a kitchen is available
        picnic_table:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether picnic tables are available
        power_supply:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether the site has electricity (e.g. for caravans)
        sanitary_dump_station:
          type: string
          enum:
            - yes
            - no
            - customers
          description: Place to dump caravan and RV sewage holding tanks
        shower:
          type: string
          enum:
            - yes
            - no
            - hot
            - cold
          description: Are showers available?
        swimming_pool:
          $ref: "#/components/schemas/BooleanTag"
          description: Whether the campsite has a swimming pool
        toilets:
          $ref: "#/components/schemas/BooleanTag"
          description: Are toilets available?
        washing_machine:
          $ref: "#/components/schemas/BooleanTag"
          description: If there's a clothes washing machine available
        waste_disposal:
          $ref: "#/components/schemas/BooleanTag"
          description: Are there places to dispose waste?
        smokefree:
          $ref: "#/components/schemas/BooleanTag"
          description: No exceptions, no smoking at any time in any part of building or outdoor area

    Tags:
      description: Tags attached to the OpenStreetMap listing of the camping
      externalDocs:
        url: https://wiki.openstreetmap.org/wiki/Tag:tourism%3Dcamp_site
      allOf:
        - type: object
          properties:
            name:
              type: string
              description: Name of this campsite
            operator:
              type: string
              description: Name of the campsite operator
        - $ref: "#/components/schemas/ClassificationTags"
        - $ref: "#/components/schemas/ContactTags"
        - $ref: "#/components/schemas/CapacityTags"
        - $ref: "#/components/schemas/AccessTags"
        - $ref: "#/components/schemas/AmenityTags"

    Camping:
      properties:
        id:
          type: string
        location:
          $ref: "#/components/schemas/Point"
          description: GeoJSON point of the camping's location
        countryCode:
          $ref: "#/components/schemas/CountryCode"
        tags:
          $ref: "#/components/schemas/Tags"
      required:
        - id
        - location
        - countryCode
        - tags

    CampingsResponse:
      required:
        - items
        - meta
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Camping"
        meta:
          $ref: "#/components/schemas/Meta"

    Meta:
      required:
        - totalCount
        - offset
        - limit
        - hasNextPage
        - hasPrevPage
      properties:
        totalCount:
          type: integer
        offset:
          type: integer
        limit:
          type: integer
        hasNextPage:
          type: boolean
        hasPrevPage:
          type: boolean

    Health:
      required:
        - status
      properties:
        status:
          type: string

    ValidationError:
      required:
        - path
        - message
        - errorCode
      properties:
        path:
          type: string
        message:
          type: string
        errorCode:
          type: string

    Error:
      required:
        - message
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
