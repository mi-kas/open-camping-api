openapi: "3.0.0"
info:
  version: 0.0.1
  title: OPEN Camping API
  description: An open REST API to search for campings
  license:
    name: MIT
    url: https://github.com/mi-kas/open-camping-api/blob/main/LICENSE
servers:
  - url: "{server}/api/v1"
    variables:
      server:
        default: http://localhost:4000
        enum:
          - http://localhost:4000 # Development server
security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      description: Health endpoint
      responses:
        "200":
          $ref: "#/components/responses/Health"
        default:
          $ref: "#/components/responses/Error"

  /campings:
    post:
      description: Search campings
      requestBody:
        description: Camping search request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CampingSearch"
      responses:
        "200":
          $ref: "#/components/responses/Campings"
        default:
          $ref: "#/components/responses/Error"

  /campings/{id}:
    get:
      description: Get camping by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/Camping"
        default:
          $ref: "#/components/responses/Error"

components:
  responses:
    Error:
      description: Error message
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Health:
      description: Health response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Health"
    Campings:
      description: Array of campings
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: "#/components/schemas/Camping"
    Camping:
      description: Single camping object
      content:
        application/json:
          schema:
            type: object
            properties:
              item:
                $ref: "#/components/schemas/Camping"
  schemas:
    Point2D:
      type: array
      description: Array with longitude and latitude coordinates
      maxItems: 2
      minItems: 2
      items:
        type: number

    Point:
      description: GeoJSON point
      externalDocs:
        url: https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.2
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum: [Point]
        coordinates:
          $ref: "#/components/schemas/Point2D"

    Polygon:
      description: GeoJSON polygon
      externalDocs:
        url: https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.6
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum: [Polygon]
        coordinates:
          type: array
          items:
            type: array
            items:
              $ref: "#/components/schemas/Point2D"

    PointSearch:
      description: Searches for campings near the specified coordinates and within the specified maximum distance. Campings are returned from nearest to farthest.
      required:
        - geometry
        - maxDistance
      properties:
        geometry:
          $ref: "#/components/schemas/Point"
        maxDistance:
          type: integer
          minimum: 0
          description: Maximum distance in meters from the point coordinates

    PolygonSearch:
      description: Searches for campings within the specified polygon
      required:
        - geometry
      properties:
        geometry:
          $ref: "#/components/schemas/Polygon"

    CampingSearch:
      required:
        - offset
        - limit
      properties:
        offset:
          type: integer
          minimum: 0
          description: The number of campings to skip before starting to collect the result set
        limit:
          type: integer
          minimum: 0
          maximum: 100
          description: The number of campings to skip before starting to collect the result set
        countryCode:
          $ref: "#/components/schemas/CountryCode"
        location:
          oneOf:
            - $ref: "#/components/schemas/PointSearch"
            - $ref: "#/components/schemas/PolygonSearch"

    CountryCode:
      type: string
      description: ISO 3166-1 alpha-2 code of the country
      minLength: 2
      maxLength: 2

    Camping:
      properties:
        id:
          type: string
        location:
          $ref: "#/components/schemas/Point"
          description: GeoJSON point of the camping's location
        countryCode:
          $ref: "#/components/schemas/CountryCode"
        tags:
          type: object
          description: Tags attached to the OpenStreetMap listing of the camping
          externalDocs:
            url: https://wiki.openstreetmap.org/wiki/Tag:tourism%3Dcamp_site
      required:
        - id
        - location
        - countryCode

    Health:
      required:
        - status
      properties:
        status:
          type: string

    ValidationError:
      required:
        - path
        - message
        - errorCode
      properties:
        path:
          type: string
        message:
          type: string
        errorCode:
          type: string

    Error:
      required:
        - message
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
